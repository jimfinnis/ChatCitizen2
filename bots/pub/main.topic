:addDrink
    "ADDING DRINK" dp
    # make list if none exists
    ?drinktimes isnone if [] !drinktimes then
    # add the current time to end of the list
    now ?drinktimes push
    # if list is long, remove first item (oldest time)
    ?drinktimes len 5 > if
        ?drinktimes shift drop
    then
; 

:howDrunk
    ?drinktimes isnone if
        0 "No drinks in list" dp
    else
        "Debug: drinktimes=" ?drinktimes+ " len="+ ?drinktimes len + dp
        0 double # accumulator
        ?drinktimes each loop
           # add halflife decay of this drink
           0.5  now i - ?@HalfLife /  pow +
        endloop
    then
;


:isdrunk howDrunk 3.5 > ;

:wantsdrink
    {
        +(.* ~not .* ~drink .*)
            ?isdrunk if
                "Good thing too.". ^yourehammered.
            else
                "Well, what would you like, then?". holdnext
            then;
        +(.* $c=~drink .*)
            ?isdrunk if ^refusedrink. else 
                "One ${$c} coming right up.".
                addDrink
                {
                    +&thanks ^yourewelcome;
                } next
            then;
        +(.* nothing .*) ^nodrinkwanted;
        +&yes "What kind?" wantsdrink;
        +&no ^nodrinkwanted;
    } next;
    

:GREET
    greet. ".".
    isdrunk not if
        ^likedrink. "?".
        {
            +&yes ^whatwouldyoulike "?" + clean wantsdrink;
            +&no ^nodrinkplease clean;
        } next
    else
        ^yourehammered.
    then    
    out clean
;       

:weathersay
    `todstring mctime !t
    cases
    ?t `morning = if
        rain if
            :["Bit grim out, isn't it?","What about that weather!","I wish the rain would stop","Bleak this norning.","Ugh, the weather"]; choose
        else
            :["What a lovely morning","What a beautiful morning","Another lovely day","It's a nice day out there","Nice, isn't it?"]; choose
        then
    case
    ?t `afternoon = if
        rain if
            :["Bit grim out, isn't it?","What about that weather!","I wish the rain would stop","Bleak this afternoon.","Ugh, the weather"]; choose
        else
            :["What a lovely afternoon","What a beautiful afternoon","Another lovely day","It's a nice day out there","Nice, isn't it?"]; choose
        then
    case
        rain if
            :["Wish I were in bed","What a grim night","it's nasty out this evening","What a grim night","Good to be in the warm"];  choose
        else
            :["What a pleasant evening","What a beautiful evening","Ah, the smell of the evening","It's a nice, quiet night","Nice, isn't it?"]; choose
        then
    otherwise
;

:drinkquestion {
    +&yes "What kind?" wantsdrink;
    +&no ^nodrinkwanted;
    +(.* $c=~drink .*)
            ?isdrunk if ^refusedrink. else 
                "One ${$c} coming right up.".
                addDrink
                {
                    +&thanks ^yourewelcome;
                } next
            then;
    +(.* nothing .*) ^nodrinkwanted;
    } next;


:dishonored
       {
            +(indeed .*) "Dishonored. Great game. What'll you have?" wantsdrink;
            +(.* [dishonored dishonored] .*) "Yep, great game. Drink?" drinkquestion;
       } next
 ;
 
:RANDSAY |:t|
    ?@timerjokestep 0 >= if stop then # suppress if timer joke active
    
    random
    "Tum te tum." randcase
    "Phew." randcase
    "<whistles tunelessly>" randcase
    "<wipes the bar>" randcase
    "What a day!" randcase
    "So, looks like we're gathering for whisky and cigars tonight." dishonored
        randcase
    "Think you'll get your own squad after what happened last night?" dishonored
        randcase
    "Anyone else got an itchy nose?"
        {
            +&yes "Sorry!";
            +&no "Just me then.";
            +(.* now .*) "Heh. Works every time. Drink?" drinkquestion;
        } next randcase
    "I could use a drink myself." randcase
    "It's been a long week." randcase
    "We're all in this together. This pub, I mean." randcase
    "Drinks, anyone?" drinkquestion randcase
    "Interesting times."
        {
            +&yes "Yup. Drink?" drinkquestion;
            +&no "At least someone's happy. Drink?" drinkquestion;
        } next
    endrandom
    clean
;   

+test RANDSAY;

+(.* ~not .* $c=~drink .*)
    ?isdrunk if
        "Good thing too.". ^yourehammered.
    else
        "OK, you don't want a ${$c}. What do you want?".
        wantsdrink
    then
;

:listdrinks
    ?isdrunk if
        "Nothing for you. "
        ^yourehammered+
    else
        "We have "
        ?@DrinksList listendwithand + "." +
        ["Any appeal to you?", "What would you like?", "Fancy any of those?"] choose +
        wantsdrink
    then
    clean
;
 

+/drinklister1([what which] .* got)
    listdrinks;
+/drinklister2([what which] .* have)
    listdrinks;
   
+/drinklister3([what which] .* ~genericdrink .*)
    listdrinks;


+(.* $c=~drink .*)
    isdrunk if
        ^refusedrink.
    else
        "One ${$c} coming right up.". addDrink
        {
            +&thanks ^yourewelcome;
        } next
    then;
    
+(.* ~genericdrink .*)
    isdrunk if
        ^refusedrink.
    else
        ^whatwouldyoulike "?" + clean wantsdrink
    then;
   
+(?~greet who .* you .*)
    "I'm ${?@botname}, "
    :["the barkeep","your host","the innkeeper","manager of this establishment"]; choose +
    clean
;

+(.* seen $c=.*)
    $c lastseen !t
    cases
      ?t 0 < if
         "They've not been in since I got on shift, sorry."
         case
      ?t 30 < if
         "They were just here. Have they gone?"
         case
      ?t 300 < if
         "There were here a few minutes ago."
         case
      ?t 1800 < if
         "They were here less than half an hour ago."
         case
      ?t 3600 < if
         "They were here less than an hour ago."
         case
      ?t 10000 < if
         "They were here a few hours ago."
         case
      "They were in a long while ago, but not since. Sorry." otherwise
      . out clean
   ;         

+&foodpat
   "Sorry, mate, we don't do food."
   { 
      +&foodpat :[
         "Really, no food.",
         "Yep, none at all.",
         "We're not a gastropub.",
         "Yeah, sorry.","None at all."
         ]; 
         choose. holdnext;
   } next
   ;

